{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Users/Users.module.css","components/Header/Header.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Posts/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Navbar/NavbarContainer.tsx","components/Navbar/Navbar.tsx","redux/users-reducer.ts","components/Users/UsersContainer.tsx","components/Users/Users.tsx","App.tsx","redux/sidebar-reducer.ts","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","src","alt","ProfileInfo","topImg","descriptionBlock","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","likesCount","newPostText","Post","props","item","like","MyPostsContainer","connect","state","profilePage","dispatch","addPost","type","updateNewPostText","text","newText","updateNewPostTextActionCreator","postsElements","map","p","newPostElement","React","createRef","postsBlock","ref","cols","rows","value","onChange","current","onClick","focus","Profile","News","Music","Settings","SEND_MESSAGE","UPDATE_NEW_MESSAGE_BODY","dialogs","name","avatar","messages","my","newMessageBody","DialogItem","dialog","to","activeClassName","active","Message","messageRight","DialogsContainer","dialogsPage","sendMessage","updateNewMessageBody","body","dialogsElements","d","messagesElements","m","newMessageElement","dialogItems","placeholder","e","currentTarget","NavbarContainer","sidebar","friendsElements","friends","f","i","friend","find","nav","activeLink","title","FOLLOW","UNFOLLOW","users","UsersContainer","usersPage","follow","userId","followAC","unfollow","unfollowAC","setUsers","setUsersAC","length","followed","fullName","status","location","city","country","photoUrl","u","user","userPhoto","App","path","render","reducers","combineReducers","action","newPost","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b6bbe75f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__miH9N\",\"dialogItems\":\"Dialogs_dialogItems__28vVj\",\"active\":\"Dialogs_active__2YcKN\",\"avatar\":\"Dialogs_avatar__18HDC\",\"messages\":\"Dialogs_messages__2ZOK2\",\"message\":\"Dialogs_message__1P9_g\",\"messageRight\":\"Dialogs_messageRight__RSRtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topImg\":\"ProfileInfo_topImg__2EEfs\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__38b-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2cl22\",\"posts\":\"MyPosts_posts__3bwbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__NI9t6\",\"like\":\"Post_like__3HYKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__lk2HZ\",\"userPhoto\":\"Users_userPhoto__3Chb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2tkSJ\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            {/*<img src=\"http://www.logobook.com/wp-content/uploads/2016/10/birds.svg\"/>*/}\r\n            <img src=\"http://vectorlogofree.com/wp-content/uploads/2014/09/53354-bird-handmade-logo-icon-vector-icon-vector-eps.png\" alt={'logo'}/>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nexport const ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.topImg}>\r\n                {/*<img src=\"https://lh3.googleusercontent.com/proxy/Dha2y0hknTXPBojcVYklYv5cWqSQrFZYpMuGuhKuyTIZXJZT_ScltaxDb0bAEAhVRSH6o5FngHBopLK7PkMo0v8ae_WS2r8yNwYfkg_4hdOI-lHrlZOQDQ\"/>*/}\r\n                <img src=\"https://wallpaperaccess.com/full/1760835.jpg\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {ActionsTypes} from './redux-store';\r\n\r\nexport const ADD_POST = 'ADD-POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\n\r\nexport type PostsDataType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 15},\r\n        {id: 2, message: 'It\\'s my first post!', likesCount: 20},\r\n        {id: 3, message: 'Blabla', likesCount: 777},\r\n        {id: 4, message: 'Dada', likesCount: 777},\r\n        {id: 5, message: 'Yo, yo, yo!!!', likesCount: 777}\r\n    ] as Array<PostsDataType>,\r\n    newPostText: 'Hello, world!'\r\n}\r\n\r\nexport type ProfileStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionsTypes): ProfileStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostsDataType = {\r\n                // id: state.posts[state.posts.length-1].id + 1,\r\n                id: 6,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: ''\r\n            }\r\n\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    } as const\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = (text: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    } as const\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport const Post = (props:PropsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.nicepng.com/png/detail/503-5032252_shamim-amiri-blank-female-avatar-icon.png\"/>\r\n            {props.message}\r\n            <div>\r\n                <span className={s.like}>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {addPostActionCreator, PostsDataType, updateNewPostTextActionCreator} from '../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {DispatchType, StateType} from '../../../redux/redux-store';\r\n\r\n\r\ntype MyPostsMapStateToPropsType = {\r\n    posts: Array<PostsDataType>\r\n    newPostText: string\r\n}\r\n\r\ntype MyPostsMapDispatchToProps = {\r\n    addPost: () => void\r\n    updateNewPostText: (text: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MyPostsMapStateToPropsType & MyPostsMapDispatchToProps\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MyPostsMapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: DispatchType): MyPostsMapDispatchToProps => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport { MyPostsPropsType } from './MyPostsContainer';\r\nimport {Post} from './Posts/Post';\r\n\r\n\r\nexport const MyPosts = (props: MyPostsPropsType) => {\r\n    const postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    const onAddPost = () => {\r\n        props.addPost()\r\n        // props.dispatch({type: 'ADD-POST'})\r\n        // props.dispatch(addPostActionCreator())\r\n        // props.updateNewPostText('')\r\n        newPostElement.current?.focus()     // это аналогично: newPostElement.current && newPostElement.current.focus()\r\n    }\r\n\r\n    const onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            props.updateNewPostText(newPostElement.current.value)\r\n            // props.dispatch({type: 'UPDATE-NEW-POST-TEXT', newText: newPostElement.current.value})\r\n            // props.dispatch(updateNewPostTextActionCreator(newPostElement.current.value))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        ref={newPostElement}\r\n                        cols={35} rows={5}\r\n                        value={props.newPostText}\r\n                        onChange={onPostChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n\r\n                {postsElements}\r\n\r\n                {/*<Post message={posts[0].message} likesCount={posts[0].likesCount}/>*/}\r\n                {/*<Post message={posts[1].message} likesCount={posts[1].likesCount}/>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            <b>News</b>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            <b>Music</b>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            <b>Settings</b>\r\n        </div>\r\n    )\r\n}","import {ActionsTypes} from './redux-store';\r\n\r\n\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\n\r\ntype DialogsDataType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\ntype MessagesDataType = {\r\n    id: number\r\n    message: string\r\n    my: boolean\r\n}\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych', avatar: 'https://image.flaticon.com/icons/png/512/147/147144.png'},\r\n        {\r\n            id: 2,\r\n            name: 'Andrey',\r\n            avatar: 'https://3dtoday.ru/upload/users/avatars/sIN8UsnRj2kXjxP6aU6Qth56TKVsssiXdwYnaXNa.png'\r\n        },\r\n        {id: 3, name: 'Sveta', avatar: 'https://image.flaticon.com/icons/png/512/146/146005.png'},\r\n        {\r\n            id: 4,\r\n            name: 'Sasha',\r\n            avatar: 'https://i.pinimg.com/originals/7c/c7/a6/7cc7a630624d20f7797cb4c8e93c09c1.png'\r\n        },\r\n        {id: 5, name: 'Victor', avatar: 'https://image.flaticon.com/icons/png/512/146/146007.png'},\r\n        {\r\n            id: 6,\r\n            name: 'Valera',\r\n            avatar: 'https://cdn.iconscout.com/icon/free/png-256/astonishes-boy-1129046.png'\r\n        }\r\n    ] as Array<DialogsDataType>,\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi', my: true},\r\n        {id: 2, message: 'Hello, world!', my: false},\r\n        {id: 3, message: 'Yo', my: true},\r\n        {id: 4, message: 'Yo', my: false},\r\n        {id: 5, message: 'Yo', my: false}\r\n    ] as Array<MessagesDataType>,\r\n\r\n    newMessageBody: 'New message'\r\n}\r\n\r\nexport type DialogsStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: DialogsStateType = initialState, action: ActionsTypes): DialogsStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            const body = state.newMessageBody\r\n\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [\r\n                    ...state.messages,\r\n                    {id: 7, message: body, my: true}\r\n                ]\r\n            }\r\n\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.newText\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    } as const\r\n}\r\n\r\nexport const updateNewMessageBodyCreator = (text: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        newText: text\r\n    } as const\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogItemPropsType = {\r\n    avatar: string\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport const DialogItem = (props: DialogItemPropsType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img className={s.avatar} src={props.avatar}/>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n    my: boolean\r\n}\r\n\r\nexport const Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.message + ' ' + (!props.my && s.messageRight)}>{props.message}</div>\r\n    )\r\n}","import {connect} from 'react-redux';\r\nimport {DialogsStateType, sendMessageCreator, updateNewMessageBodyCreator} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {DispatchType, StateType} from '../../redux/redux-store';\r\n\r\n\r\ntype DialogsMapStateToPropsType = {\r\n    dialogsPage: DialogsStateType\r\n}\r\n\r\ntype DialogsMapDispatchToProps = {\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (body: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = DialogsMapStateToPropsType & DialogsMapDispatchToProps\r\n\r\n\r\n\r\nconst mapStateToProps = (state: StateType):DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: DispatchType):DialogsMapDispatchToProps => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        },\r\n        updateNewMessageBody: (body: string) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent} from 'react';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport {Message} from './Message/Message';\r\nimport {DialogsPropsType} from './DialogsContainer';\r\n\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n    const state = props.dialogsPage\r\n    const dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} avatar={d.avatar} name={d.name} id={d.id}/>)\r\n    const messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} my={m.my}/>)\r\n    const newMessageBody = state.newMessageBody\r\n\r\n    const newMessageElement = React.createRef<HTMLTextAreaElement>()\r\n    const onSendMessageClick = () => {\r\n        props.sendMessage()\r\n        newMessageElement.current?.focus()\r\n    }\r\n\r\n    const onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const body = e.currentTarget.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n           </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div>\r\n                    <textarea\r\n                        placeholder={'Enter your message'}\r\n                        ref={newMessageElement}\r\n                        cols={50} rows={7}\r\n                        value={newMessageBody}\r\n                        onChange={onNewMessageChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onSendMessageClick}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux';\r\nimport {Navbar} from './Navbar';\r\nimport {DispatchType, StateType} from '../../redux/redux-store';\r\nimport {DialogsStateType} from '../../redux/dialogs-reducer';\r\nimport {SidebarStateType} from '../../redux/sidebar-reducer';\r\n\r\n\r\ntype NavbarMapStateToPropsType = {\r\n    dialogsPage: DialogsStateType\r\n    sidebar: SidebarStateType\r\n}\r\n\r\ntype NavbarMapDispatchToProps = {\r\n}\r\n\r\nexport type NavbarPropsType = NavbarMapStateToPropsType & NavbarMapDispatchToProps\r\n\r\n\r\nconst mapStateToProps = (state: StateType): NavbarMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchType): NavbarMapDispatchToProps => {\r\n    return {}\r\n}\r\n\r\nexport const NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { NavbarPropsType } from './NavbarContainer';\r\n\r\n\r\nexport const Navbar = (props: NavbarPropsType) => {\r\n    const friendsElements = props.sidebar.friends.map(\r\n        (f,i) => {\r\n            let friend = props.dialogsPage.dialogs.find(d => d.id === f)\r\n            if (!friend) {\r\n                friend = props.dialogsPage.dialogs[0]\r\n            }\r\n            return (\r\n                <div key={i} className={s.avatar}>\r\n                    <img src={friend.avatar} alt={'avatar'}/>\r\n                    <div>{friend.name}</div>\r\n                </div>\r\n            )\r\n        }\r\n    )\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={s.friends}>\r\n                <div className={s.title}>Friends</div>\r\n\r\n                {friendsElements}\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import { ActionsTypes } from \"./redux-store\"\r\n\r\nexport const FOLLOW = 'FOLLOW'\r\nexport const UNFOLLOW = 'UNFOLLOW'\r\nexport const SET_USERS = 'SET-USERS'\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserDataType = {\r\n    id: number\r\n    followed: boolean\r\n    fullName: string\r\n    status: string\r\n    location: LocationType\r\n    photoUrl: string\r\n}\r\n\r\nexport type UsersStateType = {\r\n    users: Array<UserDataType>\r\n}\r\n\r\n\r\nconst initialState: UsersStateType = {\r\n    users:\r\n        [\r\n            // {\r\n            //     id: 1,\r\n            //     followed: false,\r\n            //     fullName: 'Dmitry',\r\n            //     status: 'I am a boss',\r\n            //     location: {city: 'Minsk', country: 'Belarus'},\r\n            //     photoUrl: 'https://jenniferperlmuttergallery.com/wp-content/uploads/2017/07/small-things.jpg'\r\n            // },\r\n            // {\r\n            //     id: 2,\r\n            //     followed: true,\r\n            //     fullName: 'Sasha',\r\n            //     status: 'I am a boss too',\r\n            //     location: {city: 'Moscow', country: 'Russia'},\r\n            //     photoUrl: 'https://4lapy.ru/resize/800x800/upload/iblock/22b/22b595349acfa4af0ef503299fb14a61.jpg'\r\n            // },\r\n            // {\r\n            //     id: 3,\r\n            //     followed: false,\r\n            //     fullName: 'Andrew',\r\n            //     status: 'I am a boss too',\r\n            //     location: {city: 'Kiev', country: 'Ukraine'},\r\n            //     // photoUrl: 'https://i.pinimg.com/originals/77/bf/c6/77bfc6ca4d3ca97b89e2cc82d807e686.png'\r\n            //     photoUrl: 'https://static.wixstatic.com/media/f24615_aae8bfb3012840ecae6fe31af668e2ca~mv2_d_4703_4000_s_4_2.jpg/v1/crop/x_0,y_0,w_4631,h_4000/fill/w_449,h_388,al_c,q_80,usm_0.66_1.00_0.01/DSC_1580.webp'\r\n            // },\r\n        ]\r\n}\r\n\r\n\r\nexport const usersReducer = (state: UsersStateType = initialState, action: ActionsTypes): UsersStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n\r\n        case 'SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const followAC = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId // userId: userId\r\n    } as const\r\n}\r\n\r\nexport const unfollowAC = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId // userId: userId\r\n    } as const\r\n}\r\n\r\nexport const setUsersAC = (users: Array<UserDataType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n}\r\n","import {connect} from 'react-redux';\r\nimport {Users} from './Users';\r\nimport {followAC, setUsersAC, unfollowAC, UserDataType, UsersStateType} from '../../redux/users-reducer';\r\nimport {DispatchType, StateType} from '../../redux/redux-store';\r\n\r\n//zzz\r\n// import {Dispatch} from 'redux';\r\n\r\ntype UsersMapStateToPropsType = {\r\n    usersPage: UsersStateType\r\n}\r\n\r\ntype UsersMapDispatchToProps = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UserDataType>) => void\r\n}\r\n\r\nexport type UsersPropsType = UsersMapStateToPropsType & UsersMapDispatchToProps\r\n\r\n\r\n\r\nconst mapStateToProps = (state: StateType): UsersMapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage\r\n    }\r\n}\r\n\r\n//zzz\r\n// const mapDispatchToProps = (dispatch: Dispatch): UsersMapDispatchToProps => {        // без уточнения типов \"action\"\r\nconst mapDispatchToProps = (dispatch: DispatchType): UsersMapDispatchToProps => {\r\n    return {\r\n        follow: (userId: number) => dispatch(followAC(userId)),\r\n        unfollow: (userId: number) => dispatch(unfollowAC(userId)),\r\n        setUsers: (users: Array<UserDataType>) => dispatch(setUsersAC(users)),\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)\r\n","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport { UsersPropsType } from './UsersContainer';\r\n\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    if (props.usersPage.users.length === 0) {\r\n        props.setUsers(\r\n            [\r\n                {\r\n                    id: 1,\r\n                    followed: false,\r\n                    fullName: 'Dmitry',\r\n                    status: 'I am a boss',\r\n                    location: {city: 'Minsk', country: 'Belarus'},\r\n                    photoUrl: 'https://jenniferperlmuttergallery.com/wp-content/uploads/2017/07/small-things.jpg'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    followed: true,\r\n                    fullName: 'Sasha',\r\n                    status: 'I am a boss too',\r\n                    location: {city: 'Moscow', country: 'Russia'},\r\n                    photoUrl: 'https://4lapy.ru/resize/800x800/upload/iblock/22b/22b595349acfa4af0ef503299fb14a61.jpg'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    followed: false,\r\n                    fullName: 'Andrew',\r\n                    status: 'I am a boss too',\r\n                    location: {city: 'Kiev', country: 'Ukraine'},\r\n                    // photoUrl: 'https://i.pinimg.com/originals/77/bf/c6/77bfc6ca4d3ca97b89e2cc82d807e686.png'\r\n                    photoUrl: 'https://static.wixstatic.com/media/f24615_aae8bfb3012840ecae6fe31af668e2ca~mv2_d_4703_4000_s_4_2.jpg/v1/crop/x_0,y_0,w_4631,h_4000/fill/w_449,h_388,al_c,q_80,usm_0.66_1.00_0.01/DSC_1580.webp'\r\n                },\r\n            ]\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.usersPage.users.map(u =>\r\n                    <div key={u.id} className={s.user}>\r\n                        <span>\r\n                            <img className={s.userPhoto} src={u.photoUrl} alt={'User_photo'}/>\r\n                            {u.followed\r\n                                ? <button onClick={() => props.unfollow(u.id)}>Unfollow</button>\r\n                                : <button onClick={() => props.follow(u.id)}>Follow</button>\r\n                            }\r\n                        </span>\r\n                        <span>\r\n                            <span>\r\n                                <div>{u.fullName}</div>\r\n                                <div>{u.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{u.location.city}</div>\r\n                                <div>{u.location.country}</div>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from './components/Header/Header';\nimport {Profile} from './components/Profile/Profile';\nimport {News} from './components/News/News';\nimport {Music} from './components/Music/Music';\nimport {Settings} from './components/Settings/Settings';\nimport {Route} from 'react-router-dom';\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\nimport {NavbarContainer} from './components/Navbar/NavbarContainer';\nimport {UsersContainer} from './components/Users/UsersContainer';\n\nexport const App = () => {\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <NavbarContainer/>\n\n            <div className='app-wrapper-content'>\n\n                <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                <Route path='/profile' render={() => <Profile/>}/>\n                <Route path='/users' render={() => <UsersContainer/>}/>\n\n                <Route path='/news' render={() => <News/>}/>\n                <Route path='/music' render={() => <Music/>}/>\n                <Route path='/settings' render={() => <Settings/>}/>\n            </div>\n        </div>\n    );\n}","import {ActionsTypes} from './redux-store';\r\n\r\n\r\nconst initialState = {\r\n    friends: [2, 4, 3] as Array<number>\r\n}\r\n\r\nexport type SidebarStateType = typeof initialState\r\n\r\n\r\nexport const sidebarReducer = (state: SidebarStateType = initialState, action: ActionsTypes): SidebarStateType => {\r\n\r\n    return state\r\n}","import {combineReducers, createStore, EmptyObject, Store} from 'redux';\r\nimport {addPostActionCreator, profileReducer, updateNewPostTextActionCreator} from './profile-reducer';\r\nimport {dialogsReducer, sendMessageCreator, updateNewMessageBodyCreator} from './dialogs-reducer';\r\nimport {sidebarReducer} from './sidebar-reducer';\r\nimport {followAC, setUsersAC, unfollowAC, usersReducer} from './users-reducer';\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n})\r\nexport let store = createStore(reducers)\r\n\r\n//============================================================================\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addPostActionCreator> |\r\n    ReturnType<typeof updateNewPostTextActionCreator> |\r\n    ReturnType<typeof sendMessageCreator> |\r\n    ReturnType<typeof updateNewMessageBodyCreator> |\r\n    ReturnType<typeof followAC> |\r\n    ReturnType<typeof unfollowAC> |\r\n    ReturnType<typeof setUsersAC>\r\n\r\nexport type DispatchType = (action: ActionsTypes) => void\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============================================================\r\n//==============================================================\r\n//==============================================================\r\ndeclare global {\r\n    interface Window {\r\n        // add you custom properties and methods\r\n        store: typeof store\r\n    }\r\n}\r\nwindow.store = store\r\n//==============================================================\r\n//==============================================================\r\n//==============================================================\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {App} from './App';\n\nimport {store} from './redux/redux-store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    // из-за этого пользователи отрисовываются 2 раза (урок 49)\n    // <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__fuf5Q\",\"item\":\"Navbar_item__oT5rA\",\"activeLink\":\"Navbar_activeLink__2RHqf\",\"friends\":\"Navbar_friends__2jLV8\",\"title\":\"Navbar_title__3XAOj\",\"avatar\":\"Navbar_avatar__3YU0Q\"};"],"sourceRoot":""}